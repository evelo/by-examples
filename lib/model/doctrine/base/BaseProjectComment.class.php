<?php

/**
 * BaseProjectComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $project_id
 * @property integer $comment_id
 * @property Project $Project
 * @property Comment $Comment
 * 
 * @method integer        getProjectId()  Returns the current record's "project_id" value
 * @method integer        getCommentId()  Returns the current record's "comment_id" value
 * @method Project        getProject()    Returns the current record's "Project" value
 * @method Comment        getComment()    Returns the current record's "Comment" value
 * @method ProjectComment setProjectId()  Sets the current record's "project_id" value
 * @method ProjectComment setCommentId()  Sets the current record's "comment_id" value
 * @method ProjectComment setProject()    Sets the current record's "Project" value
 * @method ProjectComment setComment()    Sets the current record's "Comment" value
 * 
 * @package    By examples
 * @subpackage model
 * @author     gajdaw
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProjectComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('project_has_comment');
        $this->hasColumn('project_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('comment_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Project', array(
             'local' => 'project_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Comment', array(
             'local' => 'comment_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}